<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Manage Restream</title>
  <style>
    body {
      font-family: sans-serif;
      margin: 2rem;
      background: #111;
      color: #eee;
    }
    button {
      margin: 0.3rem;
      padding: 0.5rem 1rem;
      background: #333;
      color: #eee;
      border: 1px solid #666;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background: #555;
    }
    .player-section {
      margin-bottom: 2rem;
      padding: 1rem;
      background: #222;
      border-radius: 6px;
    }
    .scene-button {
      display: inline-block;
      margin: 0.5rem;
      padding: 0.5rem;
      background: #333;
      color: #eee;
      border: 1px solid #666;
      border-radius: 4px;
      cursor: pointer;
    }
    .scene-button:hover {
      background: #555;
    }
  </style>
</head>
<body>
  <h1>Manage Restream: Race <%= raceId %></h1>
  <div style="margin-bottom: 2em;">
    <button id="startStreamBtn" style="padding: 0.8em 1.5em; font-weight: bold;">
      Start Stream
    </button>
  </div>


  <% players.forEach((player, idx) => { %>
    <div class="player-section">
      <h2><%= player.backend_name %>: <%= player.display_name || player.backend_name %></h2>
      
      <a 
        href="/crop.html?raceId=<%= raceId %>&playerKey=Player<%= idx+1 %>&playerInternalName=<%= encodeURIComponent(player.backend_name) %>"
        target="_blank">
        <button>
          Crop <%= player.display_name || player.backend_name %>
        </button>
      </a>

      <h3>Adjust Volume:</h3>
      <% [-100,-50,-25,-5,5,25,50,100].forEach(delta => { %>
        <button onclick="adjustVolume('<%= player.obs_source_name %>', <%= delta %>)">
          <%= delta > 0 ? '+' : '' %><%= delta %>%
        </button>
      <% }); %>
    </div>
  <% }); %>

  <!-- ðŸŸ¢ Moved outside the player loop -->
  <div class="player-section">
    <h2>Discord Audio</h2>
    <h3>Adjust Volume:</h3>
    <% [-100,-50,-25,-5,5,25,50,100].forEach(delta => { %>
      <button onclick="adjustVolume('Discord', <%= delta %>)">
        <%= delta > 0 ? '+' : '' %><%= delta %>%
      </button>
    <% }); %>
  </div>

  <h2>Switch Audio:</h2>
  <% players.forEach((player, idx) => { %>
    <button onclick="switchAudio('<%= player.obs_source_name %>')">
      Switch to <%= player.display_name || player.backend_name %>
    </button>
  <% }); %>

  <h2>Change Scene:</h2>
  <% scenes.forEach(scene => { %>
    <div class="scene-button" onclick="switchScene('<%= scene %>')">
      <%= scene %>
    </div>
  <% }); %>

  <div style="margin-top: 2em;">
    <button id="endStreamBtn">End Stream</button>
  </div>


  <script>
    function adjustVolume(obsSourceName, delta) {
      fetch(`/restream/adjust-volume`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          player: obsSourceName,
          delta
        })
      }).then(() => {
        alert(`Adjusted ${obsSourceName} volume by ${delta}%`);
      });
    }

    function switchAudio(obsSourceName) {
      fetch(`/restream/switch-audio`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ player: obsSourceName })
      }).then(() => {
        alert(`Switched audio to ${obsSourceName}`);
      });
    }

    function switchScene(scene) {
      fetch(`/restream/switch-scene`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ scene })
      }).then(() => {
        alert(`Switched to scene: ${scene}`);
      });
    }

    document.getElementById("endStreamBtn").addEventListener("click", () => {
      if (!confirm("Are you sure you want to end the stream?")) return;

      fetch("/restream/end-stream", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ raceId: "<%= raceId %>" })
      })
        .then((res) => {
          if (!res.ok) {
            throw new Error("Failed to end stream.");
          }
          return res.json();
        })
        .then((data) => {
          alert(data.message || "Stream successfully ended.");
          window.location.href = "/admin.html";
        })
        .catch((err) => {
          console.error(err);
          alert("An error occurred while ending the stream.");
        });
    });
    document.getElementById("startStreamBtn").addEventListener("click", () => {
      if (!confirm("Are you sure you want to start streaming to Twitch?")) return;

      fetch(`/api/start-stream/${"<%= raceId %>"}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((res) => res.json())
        .then((result) => {
          if (result.error) {
            alert(`Error starting stream:\n${result.error}`);
          } else {
            alert(result.message || "Streaming started!");
            document.getElementById("startStreamBtn").style.display = "none";
          }
        })
        .catch((err) => {
          console.error(err);
          alert("Error starting stream.");
        });
    });
    <% if (raceState === "In Progress") { %>
      document.addEventListener("DOMContentLoaded", () => {
        const btn = document.getElementById("startStreamBtn");
        if (btn) {
          btn.style.display = "none";
        }
      });
    <% } %>



  </script>
</body>


</html>
